name: Extractor Test

on:
  workflow_dispatch:
    inputs:
      urls:
        description: "改行区切りのテストURL（空ならデフォルトを使用）"
        required: false
        default: ""

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run extractor smoke test (force log + artifact)
        env:
          EXTRACTOR_DEBUG: "1"
          PYTHONUNBUFFERED: "1"
          INPUT_URLS: ${{ github.event.inputs.urls }}
        run: |
          set -euo pipefail

          echo "----- Incoming URLs (raw) -----"
          echo "${INPUT_URLS}"

          echo "----- Start Python test -----"
          python - <<'PY'
import os, sys, json
from supplier_extractors import fetch_html, extract_supplier_info

raw = os.environ.get("INPUT_URLS", "").strip()
urls = [u.strip() for u in raw.splitlines() if u.strip()]
if not urls:
    urls = ["https://netmall.hardoff.co.jp/product/5372313/"]

print("URLS:", urls, flush=True)

results = []
for i, u in enumerate(urls, 1):
    print(f"\n[{i}/{len(urls)}] GET {u}", flush=True)
    try:
        html = fetch_html(u)
        info = extract_supplier_info(u, html, debug=True)
        rec = {
            "url": u,
            "stock": info.get("stock"),
            "qty": info.get("qty"),
            "price": info.get("price"),
            "debug": info.get("_debug", {})
        }
        print(json.dumps(rec, ensure_ascii=False, indent=2), flush=True)
        results.append(rec)
    except Exception as e:
        rec = {"url": u, "error": str(e)}
        print("ERROR:", rec, flush=True)
        results.append(rec)

with open("extractor_results.json", "w", encoding="utf-8") as f:
    json.dump(results, f, ensure_ascii=False, indent=2)

print("\nWROTE extractor_results.json", flush=True)
PY

      - name: Upload extractor results
        uses: actions/upload-artifact@v4
        with:
          name: extractor_results
          path: extractor_results.json
